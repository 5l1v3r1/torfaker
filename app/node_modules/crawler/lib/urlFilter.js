const _ = require('lodash');

module.exports = {

    getSingleLink: function(urls, domain) {
        let filtered = urls
            .map(url => url.trim())
            .map(url => url.split('#')[0]) //remove ids
            .map(url => url.split('$')[0]) //remove params
            .filter(link => link.indexOf(domain) !== -1); //remove bad links

        let uniqueLinks = _.uniq(filtered);
        let validLinks  = uniqueLinks.filter(this.validatorRunner.bind(this));
        let newDest     = _.sample(validLinks);

        return newDest
            ? newDest
            : domain;
    },

    validateUrl: {
        tooShort          : str => str.length < 15,
        badFirstChar      : str => /^[\s/#]/.test(str),
        containsBadWord   : str => /.*javascript|void|search|feeds|archive/.test(str),
        htmlComEndOnly    : str => !(/.+\.(html|com)$/.test(str)),
        stupidSites       : str => /.*\/p\//.test(str)
    },

    validatorRunner: function (e) {
        let accu = [];

        for(let validator in this.validateUrl) {
            accu.push(this.validateUrl[validator](e))
        }

        return accu.some(v => v === true)
            ? false
            : true
    },

    /**
     * filter links withc are not necessary for scrapper
     * @param  {string} url url to check
     * @param  {string} domain www
     * @return {boolean/ string} true, false or url string
     */
    filterUselessLinks: function(url, domain) {
        const ga = url.match(/.*\.google-analytics\.com.*/g)
        return ga
            ? ga
            : (url.indexOf(domain) !== -1);
    }
};
